[{"E:\\React-Js\\github\\Memories-Application\\client\\src\\index.js":"1","E:\\React-Js\\github\\Memories-Application\\client\\src\\App.js":"2","E:\\React-Js\\github\\Memories-Application\\client\\src\\components\\index.js":"3","E:\\React-Js\\github\\Memories-Application\\client\\src\\components\\Posts\\index.js":"4","E:\\React-Js\\github\\Memories-Application\\client\\src\\components\\Posts\\Post\\index.js":"5","E:\\React-Js\\github\\Memories-Application\\client\\src\\components\\Form\\index.js":"6","E:\\React-Js\\github\\Memories-Application\\client\\src\\style.js":"7","E:\\React-Js\\github\\Memories-Application\\client\\src\\components\\Form\\style.js":"8","E:\\React-Js\\github\\Memories-Application\\client\\src\\components\\Posts\\style.js":"9","E:\\React-Js\\github\\Memories-Application\\client\\src\\components\\Posts\\Post\\style.js":"10","E:\\React-Js\\github\\Memories-Application\\client\\src\\reducers\\index.js":"11","E:\\React-Js\\github\\Memories-Application\\client\\src\\reducers\\posts.js":"12","E:\\React-Js\\github\\Memories-Application\\client\\src\\actions\\posts.js":"13","E:\\React-Js\\github\\Memories-Application\\client\\src\\api\\index.js":"14","E:\\React-Js\\github\\Memories-Application\\client\\src\\constans\\actionConstans.js":"15"},{"size":455,"mtime":1611510126944,"results":"16","hashOfConfig":"17"},{"size":1390,"mtime":1611533229278,"results":"18","hashOfConfig":"17"},{"size":129,"mtime":1610626592899,"results":"19","hashOfConfig":"17"},{"size":716,"mtime":1611528952567,"results":"20","hashOfConfig":"17"},{"size":2362,"mtime":1611532223722,"results":"21","hashOfConfig":"17"},{"size":3653,"mtime":1611537909249,"results":"22","hashOfConfig":"17"},{"size":583,"mtime":1611533132635,"results":"23","hashOfConfig":"17"},{"size":645,"mtime":1611537708616,"results":"24","hashOfConfig":"17"},{"size":278,"mtime":1610624721600,"results":"25","hashOfConfig":"17"},{"size":1013,"mtime":1611528349805,"results":"26","hashOfConfig":"17"},{"size":121,"mtime":1610826242102,"results":"27","hashOfConfig":"17"},{"size":566,"mtime":1611534270328,"results":"28","hashOfConfig":"17"},{"size":1283,"mtime":1611533809472,"results":"29","hashOfConfig":"17"},{"size":437,"mtime":1611540074170,"results":"30","hashOfConfig":"17"},{"size":175,"mtime":1611533720883,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"fv1p30",{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"34"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"34"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"34"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"E:\\React-Js\\github\\Memories-Application\\client\\src\\index.js",[],["66","67"],"E:\\React-Js\\github\\Memories-Application\\client\\src\\App.js",["68"],"import React, { useEffect, useState } from \"react\";\nimport { Container, AppBar, Typography, Grow, Grid } from \"@material-ui/core\";\nimport { useDispatch } from \"react-redux\";\nimport { getPosts } from \"./actions/posts\";\nimport memories from \"./images/memories.jpg\";\nimport { Posts, Form } from \"./components\";\nimport useStyles from \"./style\";\nfunction App() {\n  const classes = useStyles();\n  const [currentId, setCurrentId] = useState(null);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(getPosts());\n  }, [currentId, dispatch]);\n  return (\n    <Container maxwidth=\"lg\">\n      <AppBar className={classes.appBar} position=\"static\" color=\"inherit\">\n        <Typography className={classes.heading} variant=\"h4\" align=\"center\">\n          Welcome to Memories Application\n        </Typography>\n      </AppBar>\n      <Grow in>\n        <Container>\n          <Grid\n            container\n            justify=\"space-between\"\n            className={classes.mainContainer}\n            alignItems=\"stretch\"\n            spacing={3}\n          >\n            <Grid item xs={12} sm={7}>\n              <Posts setCurrentId={setCurrentId} />\n            </Grid>\n            <Grid item xs={12} sm={4}>\n              <Form currentId={currentId} setCurrentId={setCurrentId} />\n            </Grid>\n          </Grid>\n        </Container>\n      </Grow>\n    </Container>\n  );\n}\n\nexport default App;\n","E:\\React-Js\\github\\Memories-Application\\client\\src\\components\\index.js",[],"E:\\React-Js\\github\\Memories-Application\\client\\src\\components\\Posts\\index.js",[],"E:\\React-Js\\github\\Memories-Application\\client\\src\\components\\Posts\\Post\\index.js",[],"E:\\React-Js\\github\\Memories-Application\\client\\src\\components\\Form\\index.js",["69"],"import React, { useState, useEffect } from \"react\";\r\nimport customStyle from \"./styles.module.css\";\r\nimport { TextField, Button, Typography, Paper } from \"@material-ui/core\";\r\nimport FileBase from \"react-file-base64\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { createPost, updatePost } from \"../../actions/posts\";\r\n\r\nimport useStyles from \"./style\";\r\nexport default function Form({ currentId, setCurrentId }) {\r\n  const post = useSelector((state) =>\r\n    currentId ? state.posts.find((p) => p._id == currentId) : null\r\n  );\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch();\r\n  const [postDate, setPostData] = useState({\r\n    creator: \"\",\r\n    title: \"\",\r\n    message: \"\",\r\n    tags: \"\",\r\n    selectedFile: \"\",\r\n  });\r\n  useEffect(() => {\r\n    if (post) setPostData(post);\r\n  }, [post]);\r\n\r\n  const handelSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (currentId) {\r\n      dispatch(updatePost(currentId, postDate));\r\n    } else {\r\n      dispatch(createPost(postDate));\r\n    }\r\n    clear();\r\n  };\r\n  const clear = () => {\r\n    setPostData({\r\n      creator: \"\",\r\n      title: \"\",\r\n      message: \"\",\r\n      tags: \"\",\r\n      selectedFile: \"\",\r\n    });\r\n    setCurrentId(null);\r\n  };\r\n  return (\r\n    <Paper className={classes.paper}>\r\n      <form\r\n        autoComplete=\"off\"\r\n        noValidate\r\n        className={`${classes.root} ${classes.form} customFont`}\r\n        onSubmit={handelSubmit}\r\n      >\r\n        <Typography variant=\"h6\">\r\n          {currentId ? \"Editing\" : \"Creating\"} a Memory\r\n        </Typography>\r\n        <TextField\r\n          name=\"creator\"\r\n          variant=\"outlined\"\r\n          label=\"Creator\"\r\n          fullWidth\r\n          value={postDate.creator}\r\n          onChange={(e) =>\r\n            setPostData({ ...postDate, creator: e.target.value })\r\n          }\r\n        />\r\n        <TextField\r\n          name=\"title\"\r\n          variant=\"outlined\"\r\n          label=\"Title\"\r\n          fullWidth\r\n          value={postDate.title}\r\n          onChange={(e) => setPostData({ ...postDate, title: e.target.value })}\r\n        />\r\n        <TextField\r\n          name=\"message\"\r\n          variant=\"outlined\"\r\n          label=\"Message\"\r\n          fullWidth\r\n          value={postDate.message}\r\n          onChange={(e) =>\r\n            setPostData({ ...postDate, message: e.target.value })\r\n          }\r\n        />\r\n        <TextField\r\n          name=\"tags\"\r\n          variant=\"outlined\"\r\n          label=\"Tags\"\r\n          fullWidth\r\n          value={postDate.tags}\r\n          onChange={(e) =>\r\n            setPostData({ ...postDate, tags: e.target.value.split(\",\") })\r\n          }\r\n        />\r\n\r\n        <div className={`${classes.fileInput} ${customStyle.uploadFile}`}>\r\n          <FileBase\r\n            id=\"fileInput\"\r\n            type=\"file\"\r\n            style={{ fontFamily: `\"Poppins\", sans-serif !important` }}\r\n            multiple={false}\r\n            onDone={({ base64 }) =>\r\n              setPostData({ ...postDate, selectedFile: base64 })\r\n            }\r\n          />\r\n        </div>\r\n\r\n        <Button\r\n          className={`${classes.buttonSubmit} ${customStyle.customFont}`}\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          size=\"large\"\r\n          type=\"submit\"\r\n          fullWidth\r\n        >\r\n          {currentId ? \"Update\" : \"Submit\"}\r\n        </Button>\r\n        <Button\r\n          className={`${classes.buttonClear} ${customStyle.customFont}`}\r\n          variant=\"contained\"\r\n          color=\"secondary\"\r\n          size=\"small\"\r\n          onClick={clear}\r\n          fullWidth\r\n        >\r\n          Clear\r\n        </Button>\r\n      </form>\r\n    </Paper>\r\n  );\r\n}\r\n","E:\\React-Js\\github\\Memories-Application\\client\\src\\style.js",[],"E:\\React-Js\\github\\Memories-Application\\client\\src\\components\\Form\\style.js",[],"E:\\React-Js\\github\\Memories-Application\\client\\src\\components\\Posts\\style.js",[],"E:\\React-Js\\github\\Memories-Application\\client\\src\\components\\Posts\\Post\\style.js",[],"E:\\React-Js\\github\\Memories-Application\\client\\src\\reducers\\index.js",[],"E:\\React-Js\\github\\Memories-Application\\client\\src\\reducers\\posts.js",["70","71"],"import {\r\n  FETCH_ALL,\r\n  CREATE,\r\n  UPDATE,\r\n  DELETE,\r\n  lIKEPOST,\r\n} from \"../constans/actionConstans\";\r\nexport default (posts = [], action) => {\r\n  switch (action.type) {\r\n    case FETCH_ALL:\r\n      return action.payload;\r\n    case CREATE:\r\n      return [...posts, action.payload];\r\n    case UPDATE:\r\n    case lIKEPOST:\r\n      return posts.map((post) =>\r\n        post._id === action.payload._id ? action.payload : post\r\n      );\r\n\r\n    case DELETE:\r\n      return posts.filter((post) => post._id != action.payload);\r\n\r\n    default:\r\n      return posts;\r\n  }\r\n};\r\n","E:\\React-Js\\github\\Memories-Application\\client\\src\\actions\\posts.js",[],"E:\\React-Js\\github\\Memories-Application\\client\\src\\api\\index.js",[],"E:\\React-Js\\github\\Memories-Application\\client\\src\\constans\\actionConstans.js",[],{"ruleId":"72","replacedBy":"73"},{"ruleId":"74","replacedBy":"75"},{"ruleId":"76","severity":1,"message":"77","line":5,"column":8,"nodeType":"78","messageId":"79","endLine":5,"endColumn":16},{"ruleId":"80","severity":1,"message":"81","line":11,"column":47,"nodeType":"82","messageId":"83","endLine":11,"endColumn":49},{"ruleId":"84","severity":1,"message":"85","line":8,"column":1,"nodeType":"86","endLine":26,"endColumn":3},{"ruleId":"80","severity":1,"message":"87","line":21,"column":46,"nodeType":"82","messageId":"83","endLine":21,"endColumn":48},"no-native-reassign",["88"],"no-negated-in-lhs",["89"],"no-unused-vars","'memories' is defined but never used.","Identifier","unusedVar","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","Expected '!==' and instead saw '!='.","no-global-assign","no-unsafe-negation"]